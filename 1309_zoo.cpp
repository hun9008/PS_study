/*
dp[0] = 1;
dp[1] = 3;
dp[2] = 7;



1 0
0 1

0 1
1 0

1 0
0 0

0 1
0 0

0 0
1 0

0 0
0 1

0 0
0 0

*/

/*
1 0
0 1
1 0

1 0
0 1
0 0

1 0
0 0
0 0

1 0
0 0 
0 1

1 0
0 0
1 0

0 1
1 0
0 1

0 1
1 0
0 0

0 1
0 0
0 0

0 1
0 0
0 1

0 1
0 0
1 0

0 0
0 0
0 0

0 0
0 1
0 0

0 0
0 1
1 0

0 0
1 0
0 0

0 0
1 0
0 1

0 0
0 0
0 1

0 0
0 0
1 0


las : 10 01 00
8+9 = 17
dp[1] 1 1 1
dp[2] 2 2 3
dp[3] +2+3  +2+3  +2+2+3
dp[3] 5 5 7
dp[4] +5+7 +5+7 +5+5+7
dp[4] 12 12 17

*/
#include <iostream>
using namespace std;

int main(){
    int n;
    cin >> n;
    int dp[n+1][3]; //10 01 00

    for(int i = 0; i <= n; i++)
    {
        for(int j = 0; j < 3; j++)
        {
            dp[i][j] = 0;
        }
    }

    dp[1][0] = 1;
    dp[1][1] = 1;
    dp[1][2] = 1;

    for(int i = 2; i <= n; i++)
    {
        dp[i][0] = (dp[i-1][1] + dp[i-1][2]) % 9901;
        dp[i][1] = (dp[i-1][0] + dp[i-1][2]) % 9901;
        dp[i][2] = (dp[i-1][0] + dp[i-1][1] + dp[i-1][2]) % 9901;
    }

    int result = (dp[n][0] + dp[n][1] + dp[n][2]) % 9901;
    cout << result << endl;
}